// Mock Support Tickets
export const mockTickets = [
  {
    id: "TICKET-1001",
    status: "open",
    priority: "high",
    subject: "Machine out of order",
    description: "Washer #3 at Clean & Fresh Laundry is not starting despite payment",
    location: "Clean & Fresh Laundry",
    locationId: "LOC-001",
    userId: "USER-101",
    userName: "Sarah Johnson",
    userEmail: "sarah.j@example.com",
    createdAt: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 30 * 60 * 1000).toISOString(),
    assignedTo: null,
    comments: [
      {
        id: "COMMENT-1",
        userId: "USER-101",
        userName: "Sarah Johnson",
        content: "I tried using the machine twice and it took my money both times.",
        createdAt: new Date(Date.now() - 1.5 * 60 * 60 * 1000).toISOString(),
      },
    ],
  },
  {
    id: "TICKET-1002",
    status: "in_progress",
    priority: "medium",
    subject: "Refund request",
    description: "Customer requesting refund for failed transaction on dryer",
    location: "Spin Cycle Laundromat",
    locationId: "LOC-002",
    userId: "USER-102",
    userName: "Michael Chen",
    userEmail: "m.chen@example.com",
    createdAt: new Date(Date.now() - 12 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 4 * 60 * 60 * 1000).toISOString(),
    assignedTo: "ADMIN-001",
    comments: [
      {
        id: "COMMENT-2",
        userId: "USER-102",
        userName: "Michael Chen",
        content: "The dryer took my payment but didn't start. I'd like a refund please.",
        createdAt: new Date(Date.now() - 10 * 60 * 60 * 1000).toISOString(),
      },
      {
        id: "COMMENT-3",
        userId: "ADMIN-001",
        userName: "Admin User",
        content:
          "I've verified the transaction and will process your refund. It should appear in your account within 3-5 business days.",
        createdAt: new Date(Date.now() - 4 * 60 * 60 * 1000).toISOString(),
      },
    ],
  },
  {
    id: "TICKET-1003",
    status: "resolved",
    priority: "low",
    subject: "App feature request",
    description: "Customer requesting ability to save favorite locations in app",
    location: "N/A",
    locationId: null,
    userId: "USER-103",
    userName: "Jessica Williams",
    userEmail: "j.williams@example.com",
    createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
    assignedTo: "ADMIN-002",
    comments: [
      {
        id: "COMMENT-4",
        userId: "USER-103",
        userName: "Jessica Williams",
        content: "It would be great if I could save my favorite laundromats in the app for quick access.",
        createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
      },
      {
        id: "COMMENT-5",
        userId: "ADMIN-002",
        userName: "Product Manager",
        content: "Thanks for the suggestion! We've added this to our feature roadmap for the next update.",
        createdAt: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000).toISOString(),
      },
      {
        id: "COMMENT-6",
        userId: "ADMIN-002",
        userName: "Product Manager",
        content:
          "This feature has been implemented in our latest app update (v2.3.0). Please update your app to access this functionality.",
        createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
      },
    ],
  },
  {
    id: "TICKET-1004",
    status: "open",
    priority: "high",
    subject: "Payment system down",
    description: "PayRange integration not working at Bubble Wash location",
    location: "Bubble Wash",
    locationId: "LOC-003",
    userId: "USER-104",
    userName: "Robert Garcia",
    userEmail: "r.garcia@example.com",
    createdAt: new Date(Date.now() - 5 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 5 * 60 * 60 * 1000).toISOString(),
    assignedTo: null,
    comments: [
      {
        id: "COMMENT-7",
        userId: "USER-104",
        userName: "Robert Garcia",
        content: "None of the machines are accepting PayRange payments. I've tried multiple machines.",
        createdAt: new Date(Date.now() - 5 * 60 * 60 * 1000).toISOString(),
      },
    ],
  },
  {
    id: "TICKET-1005",
    status: "in_progress",
    priority: "medium",
    subject: "Account login issues",
    description: "Customer unable to log in to their account after password reset",
    location: "N/A",
    locationId: null,
    userId: "USER-105",
    userName: "Emma Thompson",
    userEmail: "e.thompson@example.com",
    createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
    assignedTo: "ADMIN-003",
    comments: [
      {
        id: "COMMENT-8",
        userId: "USER-105",
        userName: "Emma Thompson",
        content: "I reset my password but I still can't log in. It keeps saying 'invalid credentials'.",
        createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
      },
      {
        id: "COMMENT-9",
        userId: "ADMIN-003",
        userName: "Support Specialist",
        content:
          "I've checked your account and there seems to be an issue with your email verification. I've manually verified your account and sent you a new password reset link.",
        createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
      },
    ],
  },
]

// Mock Users
export const mockUsers = [
  {
    id: "USER-101",
    name: "Sarah Johnson",
    email: "sarah.j@example.com",
    phone: "+1 (555) 123-4567",
    status: "active",
    subscription: "premium",
    joinDate: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000).toISOString(),
    lastActive: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
    healthPreferences: ["eco-friendly", "hypoallergenic"],
    bookings: 12,
    orders: 8,
    tickets: 1,
  },
  {
    id: "USER-102",
    name: "Michael Chen",
    email: "m.chen@example.com",
    phone: "+1 (555) 234-5678",
    status: "active",
    subscription: "free",
    joinDate: new Date(Date.now() - 45 * 24 * 60 * 60 * 1000).toISOString(),
    lastActive: new Date(Date.now() - 12 * 60 * 60 * 1000).toISOString(),
    healthPreferences: ["standard"],
    bookings: 5,
    orders: 2,
    tickets: 1,
  },
  {
    id: "USER-103",
    name: "Jessica Williams",
    email: "j.williams@example.com",
    phone: "+1 (555) 345-6789",
    status: "active",
    subscription: "premium",
    joinDate: new Date(Date.now() - 120 * 24 * 60 * 60 * 1000).toISOString(),
    lastActive: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
    healthPreferences: ["fragrance-free", "natural"],
    bookings: 28,
    orders: 15,
    tickets: 3,
  },
  {
    id: "USER-104",
    name: "Robert Garcia",
    email: "r.garcia@example.com",
    phone: "+1 (555) 456-7890",
    status: "active",
    subscription: "free",
    joinDate: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),
    lastActive: new Date(Date.now() - 5 * 60 * 60 * 1000).toISOString(),
    healthPreferences: ["standard"],
    bookings: 3,
    orders: 0,
    tickets: 1,
  },
  {
    id: "USER-105",
    name: "Emma Thompson",
    email: "e.thompson@example.com",
    phone: "+1 (555) 567-8901",
    status: "inactive",
    subscription: "free",
    joinDate: new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString(),
    lastActive: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),
    healthPreferences: ["eco-friendly"],
    bookings: 8,
    orders: 4,
    tickets: 2,
  },
  {
    id: "USER-106",
    name: "David Wilson",
    email: "d.wilson@example.com",
    phone: "+1 (555) 678-9012",
    status: "active",
    subscription: "premium",
    joinDate: new Date(Date.now() - 75 * 24 * 60 * 60 * 1000).toISOString(),
    lastActive: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
    healthPreferences: ["hypoallergenic", "natural"],
    bookings: 18,
    orders: 12,
    tickets: 0,
  },
]

// Mock Locations (Laundromats)
export const mockLocations = [
  {
    id: "LOC-001",
    name: "Clean & Fresh Laundry",
    address: "123 West 72nd Street, New York, NY 10023",
    status: "operational",
    machines: {
      total: 15,
      washers: 8,
      dryers: 7,
      operational: 14,
      outOfOrder: 1,
    },
    paymentSystems: ["PayRange", "Coin"],
    revenue: {
      daily: 245.5,
      weekly: 1680.75,
      monthly: 7250.0,
    },
    utilization: 72,
    lastMaintenance: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),
    openTickets: 1,
  },
  {
    id: "LOC-002",
    name: "Spin Cycle Laundromat",
    address: "456 East 86th Street, New York, NY 10028",
    status: "operational",
    machines: {
      total: 20,
      washers: 12,
      dryers: 8,
      operational: 20,
      outOfOrder: 0,
    },
    paymentSystems: ["PayRange", "Coin", "Credit Card"],
    revenue: {
      daily: 312.25,
      weekly: 2145.8,
      monthly: 9320.5,
    },
    utilization: 85,
    lastMaintenance: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),
    openTickets: 1,
  },
  {
    id: "LOC-003",
    name: "Bubble Wash",
    address: "789 Amsterdam Avenue, New York, NY 10025",
    status: "partial_outage",
    machines: {
      total: 18,
      washers: 10,
      dryers: 8,
      operational: 18,
      outOfOrder: 0,
    },
    paymentSystems: ["PayRange", "Credit Card"],
    revenue: {
      daily: 198.75,
      weekly: 1350.4,
      monthly: 5840.25,
    },
    utilization: 65,
    lastMaintenance: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),
    openTickets: 1,
  },
  {
    id: "LOC-004",
    name: "Laundry Express",
    address: "321 West 14th Street, New York, NY 10014",
    status: "operational",
    machines: {
      total: 12,
      washers: 6,
      dryers: 6,
      operational: 11,
      outOfOrder: 1,
    },
    paymentSystems: ["Coin", "Credit Card"],
    revenue: {
      daily: 175.5,
      weekly: 1225.0,
      monthly: 5300.75,
    },
    utilization: 58,
    lastMaintenance: new Date(Date.now() - 21 * 24 * 60 * 60 * 1000).toISOString(),
    openTickets: 0,
  },
  {
    id: "LOC-005",
    name: "Wash & Fold Center",
    address: "555 Lexington Avenue, New York, NY 10022",
    status: "operational",
    machines: {
      total: 25,
      washers: 15,
      dryers: 10,
      operational: 23,
      outOfOrder: 2,
    },
    paymentSystems: ["PayRange", "Coin", "Credit Card"],
    revenue: {
      daily: 385.25,
      weekly: 2695.5,
      monthly: 11650.75,
    },
    utilization: 78,
    lastMaintenance: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString(),
    openTickets: 0,
  },
]

// Mock System Status
export const mockSystemStatus = {
  overall: "operational",
  components: [
    {
      name: "User Authentication",
      status: "operational",
      uptime: 99.98,
      lastIncident: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),
    },
    {
      name: "Payment Processing",
      status: "operational",
      uptime: 99.95,
      lastIncident: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),
    },
    {
      name: "Machine Connectivity",
      status: "partial_outage",
      uptime: 98.75,
      lastIncident: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
    },
    {
      name: "Mobile Application",
      status: "operational",
      uptime: 99.99,
      lastIncident: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),
    },
    {
      name: "Admin Dashboard",
      status: "operational",
      uptime: 100.0,
      lastIncident: null,
    },
    {
      name: "Database",
      status: "operational",
      uptime: 99.97,
      lastIncident: new Date(Date.now() - 21 * 24 * 60 * 60 * 1000).toISOString(),
    },
  ],
  recentIncidents: [
    {
      id: "INC-001",
      component: "Machine Connectivity",
      status: "resolved",
      description: "Connectivity issues with PayRange-enabled machines at Bubble Wash location",
      startTime: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
      endTime: new Date(Date.now() - 1.5 * 24 * 60 * 60 * 1000).toISOString(),
      affectedLocations: ["LOC-003"],
    },
    {
      id: "INC-002",
      component: "Payment Processing",
      status: "resolved",
      description: "Delayed transaction processing for credit card payments",
      startTime: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),
      endTime: new Date(Date.now() - 6.8 * 24 * 60 * 60 * 1000).toISOString(),
      affectedLocations: ["LOC-002", "LOC-004", "LOC-005"],
    },
  ],
  maintenanceSchedule: [
    {
      id: "MAINT-001",
      component: "Database",
      description: "Scheduled database optimization and backup",
      scheduledStart: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString(),
      scheduledEnd: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000 + 2 * 60 * 60 * 1000).toISOString(),
      expectedImpact: "Minimal - No downtime expected",
    },
    {
      id: "MAINT-002",
      component: "Mobile Application",
      description: "Deployment of v2.4.0 with new features and bug fixes",
      scheduledStart: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),
      scheduledEnd: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000 + 1 * 60 * 60 * 1000).toISOString(),
      expectedImpact: "Minimal - Brief app unavailability during update",
    },
  ],
}

// Mock Performance Metrics
export const mockPerformanceMetrics = {
  userMetrics: {
    totalUsers: 5842,
    activeUsers: 3927,
    premiumUsers: 1256,
    newUsersLast30Days: 423,
    userRetentionRate: 78.5,
    dailyActiveUsers: [
      { date: "2023-06-01", count: 1245 },
      { date: "2023-06-02", count: 1302 },
      { date: "2023-06-03", count: 1187 },
      { date: "2023-06-04", count: 1098 },
      { date: "2023-06-05", count: 1356 },
      { date: "2023-06-06", count: 1423 },
      { date: "2023-06-07", count: 1378 },
    ],
  },
  bookingMetrics: {
    totalBookingsLast30Days: 8756,
    averageBookingsPerDay: 292,
    peakBookingHours: [
      { hour: "08:00", count: 245 },
      { hour: "12:00", count: 312 },
      { hour: "17:00", count: 378 },
      { hour: "20:00", count: 289 },
    ],
    bookingCompletionRate: 94.2,
    machineUtilization: 72.8,
  },
  revenueMetrics: {
    totalRevenueLast30Days: 42850.75,
    revenueByLocation: [
      { id: "LOC-001", name: "Clean & Fresh Laundry", revenue: 7250.0 },
      { id: "LOC-002", name: "Spin Cycle Laundromat", revenue: 9320.5 },
      { id: "LOC-003", name: "Bubble Wash", revenue: 5840.25 },
      { id: "LOC-004", name: "Laundry Express", revenue: 5300.75 },
      { id: "LOC-005", name: "Wash & Fold Center", revenue: 11650.75 },
    ],
    revenueGrowth: 12.5,
    averageTransactionValue: 4.85,
  },
  systemMetrics: {
    apiResponseTime: 245, // in ms
    appCrashRate: 0.3, // percentage
    serverUptime: 99.98, // percentage
    errorRate: 0.42, // percentage
  },
}

// Mock System Logs
export const mockSystemLogs = [
  {
    id: "LOG-001",
    timestamp: new Date(Date.now() - 5 * 60 * 1000).toISOString(),
    level: "INFO",
    source: "AuthService",
    message: "User USER-106 logged in successfully",
  },
  {
    id: "LOG-002",
    timestamp: new Date(Date.now() - 15 * 60 * 1000).toISOString(),
    level: "WARNING",
    source: "PaymentService",
    message: "Delayed response from payment gateway for transaction TXN-45678",
  },
  {
    id: "LOG-003",
    timestamp: new Date(Date.now() - 30 * 60 * 1000).toISOString(),
    level: "ERROR",
    source: "MachineConnectivity",
    message: "Failed to establish connection with machine WASH-003 at LOC-003",
  },
  {
    id: "LOG-004",
    timestamp: new Date(Date.now() - 45 * 60 * 1000).toISOString(),
    level: "INFO",
    source: "BookingService",
    message: "User USER-101 successfully booked machine WASH-005 at LOC-001",
  },
  {
    id: "LOG-005",
    timestamp: new Date(Date.now() - 1 * 60 * 60 * 1000).toISOString(),
    level: "INFO",
    source: "NotificationService",
    message: "Push notification sent to 127 users for promotion 'Weekend Special'",
  },
  {
    id: "LOG-006",
    timestamp: new Date(Date.now() - 1.5 * 60 * 60 * 1000).toISOString(),
    level: "WARNING",
    source: "DatabaseService",
    message: "High CPU usage detected on primary database server",
  },
  {
    id: "LOG-007",
    timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
    level: "ERROR",
    source: "PaymentService",
    message: "Transaction TXN-45670 failed: Insufficient funds",
  },
  {
    id: "LOG-008",
    timestamp: new Date(Date.now() - 3 * 60 * 60 * 1000).toISOString(),
    level: "INFO",
    source: "UserService",
    message: "New user USER-107 registered successfully",
  },
  {
    id: "LOG-009",
    timestamp: new Date(Date.now() - 4 * 60 * 60 * 1000).toISOString(),
    level: "INFO",
    source: "AdminService",
    message: "Admin ADMIN-001 updated system configuration",
  },
  {
    id: "LOG-010",
    timestamp: new Date(Date.now() - 5 * 60 * 60 * 1000).toISOString(),
    level: "CRITICAL",
    source: "SecurityService",
    message: "Multiple failed login attempts detected for user USER-105",
  },
]
